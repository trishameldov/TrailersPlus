# Generated by Django 3.0.9 on 2020-08-06 14:45

from django.db import migrations, models
import django.db.models.deletion
import streams.blocks
import streams.splitted_blocks.commerce_blocks.detail_page_blocks as dpb
import wagtail.contrib.routable_page.models
import wagtail.core.fields


def create_default_location(apps, schema_editor):
    Location = apps.get_model('product', 'Location')
    location_count = Location.objects.all().count()
    if not location_count:
        Location.objects.create(
            store_id='Nampa',
            state='ID',
            store_keywords=['Nampa', 'Idaho', 'Trucks']
        )


class Migration(migrations.Migration):

    dependencies = [
        ('wagtailcore', '0045_assign_unlock_grouppagepermission'),
        ('product', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProductPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('content', wagtail.core.fields.StreamField([('product_list', dpb.ProductPage()), ('cta', dpb.CTA()), ('recently', dpb.RecentlyViewed()), ('long_info', dpb.LongInfo()), ('partners', streams.blocks.PartnersBlock()), ('reserve', dpb.Reserve()), ('schedule', dpb.Schedule()), ('appointment', dpb.Appointment()), ('found_lower', dpb.FoundLower())], blank=True, null=True)),
                ('content_en', wagtail.core.fields.StreamField([('product_list', dpb.ProductPage()), ('cta', dpb.CTA()), ('recently', dpb.RecentlyViewed()), ('long_info', dpb.LongInfo()), ('partners', streams.blocks.PartnersBlock()), ('reserve', dpb.Reserve()), ('schedule', dpb.Schedule()), ('appointment', dpb.Appointment()), ('found_lower', dpb.FoundLower())], blank=True, null=True)),
                ('content_es', wagtail.core.fields.StreamField([('product_list', dpb.ProductPage()), ('cta', dpb.CTA()), ('recently', dpb.RecentlyViewed()), ('long_info', dpb.LongInfo()), ('partners', streams.blocks.PartnersBlock()), ('reserve', dpb.Reserve()), ('schedule', dpb.Schedule()), ('appointment', dpb.Appointment()), ('found_lower', dpb.FoundLower())], blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(wagtail.contrib.routable_page.models.RoutablePageMixin, 'wagtailcore.page'),
        ),
        migrations.RunPython(create_default_location),
    ]
